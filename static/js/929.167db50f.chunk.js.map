{"version":3,"file":"static/js/929.167db50f.chunk.js","mappings":"0JAWe,SAASA,EAAYC,GAClC,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAS,IAC1CK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,GAE/BO,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAYD,EAAAA,EAAAA,QAAO,MA+CzB,OACEE,EAAAA,EAAAA,MAAA,OACEC,UAAW,8EAE2CC,SAAA,EAEtDC,EAAAA,EAAAA,KAAA,OACEC,IAAKL,EACLE,UAAU,4DACVI,QAnBgBC,IACpB,MAAMC,EAAQV,EAASW,QACjBC,EAAeH,EAAEI,OACjBC,EAAUC,KAAKC,IACnBD,KAAKE,IAAIP,EAAMQ,YAAcN,EAAe,GAAI,GAChDF,EAAMS,UAERT,EAAMQ,YAAcJ,CAAO,EAYDT,UAEtBC,EAAAA,EAAAA,KAAA,SACEC,IAAKP,EACLoB,IAAK9B,EAAM+B,UACXjB,UAAW,6BAGXkB,UAAU,OAIdnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oFAAmFC,SAAA,EAChGC,EAAAA,EAAAA,KAAA,UACEiB,QApEgBC,KACtB,MAAMd,EAAQV,EAASW,QACnBpB,EACFmB,EAAMe,QAENf,EAAMgB,OAERlC,GAAcD,EAAU,EA8DlBa,UAAU,8FAA6FC,SAEtGd,GAAYe,EAAAA,EAAAA,KAACqB,EAAAA,IAAO,CAACC,KAAM,MAAStB,EAAAA,EAAAA,KAACuB,EAAAA,IAAM,CAACD,KAAM,QAGrDtB,EAAAA,EAAAA,KAAA,UACEiB,QAjEWO,KACH9B,EAASW,QACjBoB,OAASrC,EACfC,GAAYD,EAAQ,EA+DdU,UAAU,8FAA6FC,SAEtGX,GAAUY,EAAAA,EAAAA,KAAC0B,EAAAA,IAAY,CAACJ,KAAM,MAAStB,EAAAA,EAAAA,KAAC2B,EAAAA,IAAU,CAACL,KAAM,QAG5DtB,EAAAA,EAAAA,KAAA,SACE4B,KAAK,QACLlB,IAAI,IACJC,IAAI,IACJkB,KAAK,MACLC,MAAOtC,EACPuC,SAvEoB5B,IAC1B,MAAMC,EAAQV,EAASW,QACvBD,EAAMZ,OAASW,EAAE6B,OAAOF,MACxBrC,EAAUW,EAAMZ,OAAO,EAqEjBM,UAAU,UAGZE,EAAAA,EAAAA,KAAA,UACEiB,QAtEiBgB,KACvB,MAAM7B,EAAQV,EAASW,QAClB6B,SAASC,mBAMZD,SAASE,iBACT7C,GAAgB,KANhBa,EAAMiC,oBAAoBC,OAAOC,IAC/BC,QAAQC,MAAMF,EAAI,IAEpBhD,GAAgB,GAIlB,EA6DMO,UAAU,8FAA6FC,SAEtGT,GAAeU,EAAAA,EAAAA,KAAC0C,EAAAA,IAAU,CAACpB,KAAM,MAAStB,EAAAA,EAAAA,KAAC2C,EAAAA,IAAQ,CAACrB,KAAM,YAKrE,C","sources":["components/Video.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n  FaPlay,\n  FaPause,\n  FaVolumeUp,\n  FaVolumeMute,\n  FaExpand,\n  FaCompress,\n} from \"react-icons/fa\";\nimport \"tailwindcss/tailwind.css\";\n\nexport default function VideoPlayer(props) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [volume, setVolume] = useState(1);\n\n  const videoRef = useRef(null);\n  const scrollRef = useRef(null);\n\n  const togglePlayPause = () => {\n    const video = videoRef.current;\n    if (isPlaying) {\n      video.pause();\n    } else {\n      video.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const toggleMute = () => {\n    const video = videoRef.current;\n    video.muted = !isMuted;\n    setIsMuted(!isMuted);\n  };\n\n  const handleVolumeChange = (e) => {\n    const video = videoRef.current;\n    video.volume = e.target.value;\n    setVolume(video.volume);\n  };\n\n  const toggleFullScreen = () => {\n    const video = videoRef.current;\n    if (!document.fullscreenElement) {\n      video.requestFullscreen().catch((err) => {\n        console.error(err);\n      });\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullScreen(false);\n    }\n  };\n\n  const handleScroll = (e) => {\n    const video = videoRef.current;\n    const scrollAmount = e.deltaY;\n    const newTime = Math.min(\n      Math.max(video.currentTime - scrollAmount / 10, 0),\n      video.duration\n    );\n    video.currentTime = newTime;\n  };\n\n  return (\n    <div\n      className={`relative w-full ${\n        isFullScreen ? \"h-screen\" : \"h-screen\"\n      } bg-black flex flex-col items-center justify-center`}\n    >\n      <div\n        ref={scrollRef}\n        className=\"relative w-full flex flex-col items-center justify-center\"\n        onWheel={handleScroll}\n      >\n        <video\n          ref={videoRef}\n          src={props.videoFile}\n          className={`w-full ${\n            isFullScreen ? \"h-full\" : \"h-full\"\n          } object-cover`}\n          controls={false}\n        />\n      </div>\n\n      <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex items-center space-x-4\">\n        <button\n          onClick={togglePlayPause}\n          className=\"p-3 bg-gray-800 text-white rounded-full shadow-lg hover:bg-gray-700 transition duration-300\"\n        >\n          {isPlaying ? <FaPause size={20} /> : <FaPlay size={20} />}\n        </button>\n\n        <button\n          onClick={toggleMute}\n          className=\"p-3 bg-gray-800 text-white rounded-full shadow-lg hover:bg-gray-700 transition duration-300\"\n        >\n          {isMuted ? <FaVolumeMute size={20} /> : <FaVolumeUp size={20} />}\n        </button>\n\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={volume}\n          onChange={handleVolumeChange}\n          className=\"w-24\"\n        />\n\n        <button\n          onClick={toggleFullScreen}\n          className=\"p-3 bg-gray-800 text-white rounded-full shadow-lg hover:bg-gray-700 transition duration-300\"\n        >\n          {isFullScreen ? <FaCompress size={20} /> : <FaExpand size={20} />}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":["VideoPlayer","props","isPlaying","setIsPlaying","useState","isMuted","setIsMuted","isFullScreen","setIsFullScreen","volume","setVolume","videoRef","useRef","scrollRef","_jsxs","className","children","_jsx","ref","onWheel","e","video","current","scrollAmount","deltaY","newTime","Math","min","max","currentTime","duration","src","videoFile","controls","onClick","togglePlayPause","pause","play","FaPause","size","FaPlay","toggleMute","muted","FaVolumeMute","FaVolumeUp","type","step","value","onChange","target","toggleFullScreen","document","fullscreenElement","exitFullscreen","requestFullscreen","catch","err","console","error","FaCompress","FaExpand"],"sourceRoot":""}